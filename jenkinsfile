pipeline {
    agent any
    parameters {
        choice(name: "DEPLOY_TO", choices: ['B1', 'dev', 'prod'], description: 'Pick an environment')
    }
    tools {
        maven "default"
        jdk "jdk11"
    }
    triggers {
        pollSCM 'H/1 * * * * '
    }
    stages {
        stage('Maven Package') {
            steps {
                sh 'mvn clean package'
                sh 'env'
            }
        }
        stage('testing') {
            steps {
                sh 'echo "Application Testing"'
                sh 'mvn test'
                junit '**/surefire-reports/TEST-*.xml'
            }
        }
        stage('Deploy to UAT') {
            when {expression { GIT_BRANCH == "origin/B1" } }
            steps {
                sh "sudo docker rmi amitojha93/tomcat-uat:v1 | true"
                sh "sudo docker container rm tomcat-uat -f | true"
                sh "sudo docker build . -t amitojha93/tomcat-uat:v1 "
                sh "sudo docker run --name tomcat-uat -d -p 8081:8080 amitojha93/tomcat-uat:v1"
                withCredentials([usernamePassword(credentialsId: 'hub-cred', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
        	   sh "sudo docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
        	   sh 'sudo docker push amitojha93/tomcat-uat:v1'
                
            }
        }
    }
        stage('Deploy to PROD') {
                        when {expression { GIT_BRANCH == "origin/prod" } }
            steps {
                sh "sudo docker rmi amitojha93/tomcat-prod:v1 | true"
                sh "sudo docker container rm tomcat-prod -f | true"
                sh "sudo docker build . -t amitojha93/tomcat-prod:v1 "
                sh "sudo docker run --name tomcat-prod -d -p 8082:8080 amitojha93/tomcat-prod:v1"
                withCredentials([usernamePassword(credentialsId: 'hub-cred', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
        	   sh "sudo docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
        	   sh 'sudo docker push amitojha93/tomcat-prod:v1'
        }
    
}
}
       stage('Deploy to dev') {
                       when {expression { GIT_BRANCH == "origin/dev" } }
            steps {
                sh "sudo docker rmi amitojha93/tomcat-dev:v1 | true"
                sh "sudo docker container rm tomcat-dev -f | true"
                sh "sudo docker build . -t amitojha93/tomcat-dev:v1 "
                sh "sudo docker run --name tomcat-dev -d -p 8083:8080 amitojha93/tomcat-dev:v1"
                withCredentials([usernamePassword(credentialsId: 'hub-cred', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
        	   sh "sudo docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
        	   sh 'sudo docker push amitojha93/tomcat-dev:v1'
       }
            }
       }
    }
}
